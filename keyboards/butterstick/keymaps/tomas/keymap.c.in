#include QMK_KEYBOARD_H

// use pyexpander to generate keymap.c:
// python3 expander3.py -f keymap.c.in | cat -s > keymap.c
// the preprocessor code is written to be readable not to produce nice output

enum pseudolayers {
    ALWAYS_ON, QWERTY, NUM, MOV, MOUSE, ASETNIOP, ASETNIOP_123, ASETNIOP_FN
};

// Keyboard states and settings
$include("keyboard.inc")

// Definitions of internal keycodes and the actual QMK layer
$include("layer.inc")

// The chord structure and chord functions (send key, switch pseudolayer, ...)
$include("chord.inc")

// Macros to simplify chord definitions
$include("macros.inc")

// Add all chords
$KC_LOCK("ALWAYS_ON", "H_TOP5 + H_TOP6 + H_BOT5 + H_BOT6")

$butterstick_rows("QWERTY",
    "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P",
    "A", "S", "D", "F", "G", "H", "J", "K", "L", ";",
    "Z", "X", "C", "V", "B", "N", "M", ",", ".", "/")

$butterstick_cols("QWERTY",
    "ESC", "MO(MOV)", "TAB", "", "RGUI", "", "INS", "DEL", "BSPC",
    "", "", "", "", "", "", "", "", "KC_ENTER",
    "O(KC_LSFT)", "LCTL", "LALT", "MO(NUM)", "LGUI", "MO(NUM)", "RALT", "RCTL", "RSFT")

#define NUM_OF_LEADER_COMBOS 0
// void test(void) {
//     SEND_STRING("Hello!");
// }
const uint16_t leader_triggers[NUM_OF_LEADER_COMBOS][$(LEADER_MAX_LENGTH)] PROGMEM = {};//{KC_Q, 0, 0, 0, 0}};
void (*leader_functions[]) (void) = {};

$KC("QWERTY", "H_BOT1 + H_BOT0", "KC_SPACE")
$MO("QWERTY", "H_TOP1 + H_TOP2 + H_TOP3 + H_TOP4", "MOUSE")

$butterstick_rows("NUM",
    "1", "2", "3", "4", "5", "6", "7", "8", "9", "0",
    "KC_F1", "KC_F2", "KC_F3", "KC_F4", "KC_F5", "KC_F6", "KC_F7", "KC_F8", "KC_F9", "KC_F10",
    "`", "-", "=", "[", "]", "\\", "\'", "", "KC_F11", "KC_F12")

$butterstick_cols("NUM",
    "KC_ESC", "", "KC_TAB", "", "KC_RGUI", "", "KC_INS", "KC_DEL", "KC_BSPC",
    "", "", "", "", "", "", "", "", "KC_ENTER",
    "KC_LSFT", "KC_LCTL", "KC_LALT", "", "KC_LGUI", "", "KC_RALT", "KC_RCTL", "KC_RSFT")

$KC("NUM", "H_BOT1 + H_BOT0", "KC_SPACE");

$butterstick_rows("MOV",
    "", "", "", "", "", "", "KC_HOME", "KC_UP", "KC_END", "KC_PGUP",
    "", "", "", "", "", "", "", "", "", "",
    "", "", "KC_LSFT", "KC_LCTL", "KC_LALT", "KC_LGUI", "KC_LEFT", "KC_DOWN", "KC_RIGHT", "KC_PGDN")

$butterstick_rows("MOUSE",
    "", "", "", "", "", "", "KC_MS_BTN1", "KC_MS_UP", "KC_MS_BTN2", "KC_MS_WH_DOWN",
    "", "", "", "", "", "", "", "", "", "",
    "", "", "KC_LSFT", "KC_LCTL", "KC_LALT", "KC_LGUI", "KC_MS_LEFT", "KC_MS_DOWN", "KC_MS_RIGHT", "KC_MS_WH_DOWN")

$DF("QWERTY", "H_TOP1 + H_TOP0 + H_BOT1 + H_BOT0", "ASETNIOP")
$DF("ASETNIOP", "H_TOP1 + H_TOP0 + H_BOT1 + H_BOT0", "QWERTY")
$MO("ASETNIOP", "H_BOT4 + H_BOT7", "ASETNIOP_FN")
$KL("ASETNIOP", "H_BOT7", "KC_SPACE", "ASETNIOP_123")

$asetniop_layer("ASETNIOP",
    "A", "S", "E", "T", "N", "I", "O", "P",
      "W", "D", "R", "B", "H", "L", "SCOLON",
        "X", "C", "Y", "V", "U", "",
          "F", "J", "COMMA", "G", "M",
            "Q", "K", "MINUS", "BSPC",
              "Z", "DOT", "QUOTE",
                "LBRACKET", "RBRACKET",
                  "SLASH")

$KC("ASETNIOP", "H_BOT5 + H_BOT6", "KC_LGUI")
$KC("ASETNIOP", "H_TOP5", "KC_ESC")
$KC("ASETNIOP", "H_TOP6", "KC_DEL")
$KC("ASETNIOP", "H_BOT4", "KC_LSFT")
$KC("ASETNIOP", "H_BOT5", "KC_LCTL")
$KC("ASETNIOP", "H_BOT6", "KC_LALT")

$asetniop_layer("ASETNIOP_123",
    "1", "2", "3", "4", "7", "8", "9", "0",
      "", "", "5", "EQUAL", "6", "BSLASH", "SCOLON",
        "", "", "", "", "", "",
          "", "", "", "", "",
            "", "", "", "BSPC",
              "", "", "",
                "", "",
                  "")

$KC("ASETNIOP_123", "H_BOT5 + H_BOT6", "KC_LGUI")
$KC("ASETNIOP_123", "H_TOP5", "KC_ESC")
$KC("ASETNIOP_123", "H_TOP6", "KC_DEL")
$KC("ASETNIOP_123", "H_BOT4", "KC_LSFT")
$KC("ASETNIOP_123", "H_BOT5", "KC_LCTL")
$KC("ASETNIOP_123", "H_BOT6", "KC_LALT")

$asetniop_layer("ASETNIOP_FN",
    "HOME", "PGDN", "PGUP", "END", "LEFT", "DOWN", "UP", "RIGHT",
      "F1", "F2", "F3", "F4", "F5", "F6", "F7",
        "F10", "", "", "", "", "F8",
          "F11", "", "", "", "F9",
            "F12", "", "", "BSPC",
              "", "", "",
                "", "",
                  "")

$KC("ASETNIOP_FN", "H_BOT5 + H_BOT6", "KC_LGUI")
$KC("ASETNIOP_FN", "H_TOP5", "KC_ESC")
$KC("ASETNIOP_FN", "H_TOP6", "KC_DEL")
$KC("ASETNIOP_FN", "H_BOT4", "KC_LSFT")
$KC("ASETNIOP_FN", "H_BOT5", "KC_LCTL")
$KC("ASETNIOP_FN", "H_BOT6", "KC_LALT")

// Register all chords, load chording logic
$include("chording_engine.inc")