$include("minunit.h")

$py(engine_path = "../../../../users/dennytom/chording_engine/")

enum pseudolayers {
    ALWAYS_ON, QWERTY, NUM
};

// Macros to simplify chord definitions
$include(engine_path + "macros.inc")

// Keyboard states and settings
$py(custom_keymaps_array = False)
$include("keyboard.inc")

// The chord structure and chord functions (send key, switch pseudolayer, ...)
$include(engine_path + "chord.inc")

$KC("QWERTY", "H_TOP1", "KC_Q")
$KC("QWERTY", "H_TOP2", "KC_W")

// Register all chords, load chording logic
$include(engine_path + "chording_engine.inc")

$TEST("wait_ms")
    wait_ms(500);
    ASSERT_EQ(UINT, current_time, 500);
$END_TEST()

$TEST("single_dance")
    wait_ms (500);
    ASSERT_EQ(UINT, state_0, IDLE);
    process_record_user (TOP1, &pressed);
    wait_ms (CHORD_TIMEOUT);
    ASSERT_EQ(UINT, state_0, IDLE);
    wait_ms (1);
    ASSERT_EQ(UINT, state_0, ACTIVATED);
    wait_ms (DANCE_TIMEOUT);
    ASSERT_EQ(UINT, state_0, ACTIVATED);
    wait_ms (1);
    ASSERT_EQ(UINT, state_0, PRESS_FROM_ACTIVE);
    wait_ms (DANCE_TIMEOUT);
    ASSERT_EQ(UINT, state_0, PRESS_FROM_ACTIVE);
    wait_ms (1);
    ASSERT_EQ(UINT, state_0, FINISHED_FROM_ACTIVE);
    process_record_user (TOP1, &depressed);
    ASSERT_EQ(UINT, state_0, IDLE);
$END_TEST()

$TEST("single_dance_fast")
    wait_ms (500);
    ASSERT_EQ(UINT, state_0, IDLE);
    process_record_user (TOP1, &pressed);
    wait_ms (CHORD_TIMEOUT);
    ASSERT_EQ(UINT, state_0, IDLE);
    wait_ms (1);
    ASSERT_EQ(UINT, state_0, ACTIVATED);
    process_record_user (TOP1, &depressed);
    ASSERT_EQ(UINT, state_0, IDLE);
$END_TEST()

$# $TEST("single_dance_faster")
$#     wait_ms (500);
$#     ASSERT_EQ(UINT, state_0, IDLE);
$#     process_record_user (TOP1, &pressed);
$#     process_record_user (TOP1, &depressed);
$#     ASSERT_EQ(UINT, state_0, IDLE);
$# $END_TEST()

$runner()