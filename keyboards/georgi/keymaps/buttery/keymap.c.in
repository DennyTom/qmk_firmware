#include QMK_KEYBOARD_H

// use pyexpander to generate keymap.c:
// python3 expander3.py -f keymap.c.in | cat -s > keymap.c
// the preprocessor code is written to be readable not to produce nice output

enum pseudolayers {
    ALWAYS_ON, QWERTY, NUM, SYM, MOVE
};

// Keyboard states and settings
$include("keyboard.inc")

// Definitions of internal keycodes and the actual QMK layer
$include("layer.inc")

// The chord structure and chord functions (send key, switch pseudolayer, ...)
$include("chord.inc")

// Macros to simplify chord definitions
$include("macros.inc")

// Add all chords

$butterstick_cols("ALWAYS_ON",
    "", "", "", "", "",       "",       "", "", "", "", "",
    "", "", "", "", "",       "CMD",       "", "", "", "", "",
    "", "", "", "", "",       "",       "", "", "", "", "",
                "", "",       "",       "", "")

$secret_chord("ALWAYS_ON", "CLEAR",
    "X", "X", "", "", "", "",             "", "", "", "", "X", "X",
    "X", "X", "", "", "", "",             "", "", "", "", "X", "X",
                  "", "", "",             "", "", "")
                  
$secret_chord("ALWAYS_ON", "ESC",
    "", "", "", "", "",  "",             "", "",  "", "", "", "",
    "", "", "", "", "",  "",             "", "",  "", "", "", "",
                "", "X", "",             "", "X", "")

$butterstick_rows("QWERTY",
              "TAB",  "Q", "W", "F", "P", "G",         "J", "L", "U", "Y", ";", "RCTL",
              "ESC",  "A", "R", "S", "T", "D",         "H", "N", "E", "I", "O", "RGUI",
              "LSFT", "Z", "X", "C", "V", "B",         "K", "M", ",", ".", "/", "DEL",
    "KL(BSPC,SYM)",  "KL(SPACE,NUM)",  "LSFT",         "KK(ENTER,RSFT)",  "KL(SPACE,NUM)",  "KL(BSPC,SYM)")
                  
$butterstick_cols("QWERTY",
    "", "", "",     "",     "",           "",       "",     "",     "",     "", "",
    "", "", "",     "",     "",           "",       "",     "",     "",     "", "",
    "", "", "LALT", "LGUI", "LCTL",       "",       "RCTL", "RGUI", "RALT", "", "",
                    "",     "MO(MOVE)",   "",       "",     "")
                   
$butterstick_rows("NUM",
    "", "1",  "2",  "3",  "4",  "5",               "6",  "7",  "8",  "9",  "0",   "",
    "", "",   "",   "",   "",   "",                "",   "",   "",   "",   "",    "",
    "", "F1", "F2", "F3", "F4", "F5",              "F6", "F7", "F8", "F9", "F10", "",
                    "",   "",   "",                "",   "",   "")
                    
$butterstick_cols("NUM",
    "", "",    "", "", "",       "",       "", "", "", "",    "",
    "", "",    "", "", "",       "",       "", "", "", "",    "",
    "", "F11", "", "", "",       "",       "", "", "", "F12", "",
                   "", "",       "",       "", "")
                
$butterstick_rows("SYM",
    "", "`",        "[",        "STR("{")", "STR("(")", "STR("<")",             "STR(">")", "STR(")")", "STR("}")",  "]",        "STR("?")", "",
    "", "STR("~")", "-",        "\'",       "STR(":")", "STR("_")",             "\\",       "=",        "STR("\"")", "STR("+")", "STR("?")", "",
    "", "STR("!")", "STR("@")", "STR("#")", "STR("$")", "STR("%")",             "STR("|")", "STR("^")", "STR("&")",  "STR("*")", "STR("?")", "",
                                "",         "",         "",                     "",         "",         "")
                                
$butterstick_cols("SYM",
    "", "", "",     "",     "",           "",       "",     "",     "",     "", "",
    "", "", "",     "",     "",           "",       "",     "",     "",     "", "",
    "", "", "LALT", "LGUI", "LCTL",       "",       "RCTL", "RGUI", "RALT", "", "",
                    "",     "",           "",       "",     "")
                                
$butterstick_rows("MOVE",
    "", "", "HOME", "UP",   "PGUP",  "",              "", "", "", "", "", "",
    "", "", "END",  "",     "PGDN",  "",              "", "", "", "", "", "",
    "", "", "LEFT", "DOWN", "RIGHT", "",              "", "", "", "", "", "",
                    "",     "",      "",              "", "", "")

// Register all chords, load chording logic
$include("chording_engine.inc")
